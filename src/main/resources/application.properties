# spring.application.name=assignment 





# Server Port (optional, defaults to 8080)
server.port=8080

# PostgreSQL Datasource Configuration
# Make sure you have CREATED this database in PostgreSQL first!
spring.datasource.url=jdbc:postgresql://localhost:5432/load_booking_db
spring.datasource.username=postgres
# Or your specific user
# The password you set == your_postgres_password 
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
# 'update': Automatically creates/updates tables based on your Java code. Good for development.
# Use 'validate' or 'none' in production.
spring.jpa.hibernate.ddl-auto=update
# Show the SQL queries being run in the console (helpful for debugging)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Specify the specific 'language' Hibernate should use for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Optional: Configure UUID generation strategy if needed (depends on Hibernate/JPA version)
# spring.jpa.properties.hibernate.id.new_generator_mappings=true

# Jackson JSON properties (optional, e.g., for timestamp formatting)
# spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSXXX # ISO 8601 format
# spring.jackson.time-zone=UTC

# # Logging Configuration - Add SLF4j logging in your classes
# logging.level.root=INFO
# logging.level.com.liveasy.assignment=DEBUG 
# # More detailed logs for your application code
# logging.level.org.springframework.web=INFO
# logging.level.org.hibernate.SQL=DEBUG 
# # Log SQL statements (alternative to show-sql)
# logging.level.org.hibernate.type.descriptor.sql=TRACE 
# # Log statement parameters